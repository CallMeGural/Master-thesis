version: "3.1"

networks:
  mynetwork:
    driver: bridge

services:
  user-service:
    networks:
      - mynetwork
    restart: always
    container_name: "user-service"
    build:
      context: ./user-service
      dockerfile: Dockerfile
    working_dir: /user-service
    ports:
      - "8083:8080"
    volumes:
      - "./user-service:/user-service"
    depends_on:
      - user-db
      - eureka-service
    environment:
      eureka.client.service-url.defaultZone: http://eureka-service:8761/eureka


  eureka-service:
    networks:
      - mynetwork
    restart: always
    container_name: "eureka-service"
    build:
      context: ./eureka
      dockerfile: Dockerfile
    working_dir: /eureka
    ports:
      - "8761:8761"
    volumes:
      - "./eureka:/eureka"

#  haproxy:
#    restart: always
#    container_name: "boilerplate-haproxy"
#    image: haproxy:2.8.0
#    ports:
#      - 80:80
#    volumes:
#      - ./haproxyHttp.cfg:/usr/local/etc/haproxy/haproxy.cfg
#    depends_on:
#      - boilerplate-angular
#      - boilerplate-backend

  user-db:
    networks:
      - mynetwork
    container_name: "user-db"
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d

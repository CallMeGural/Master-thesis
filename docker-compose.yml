version: "3.1"

networks:
  mynetwork:
    driver: bridge

services:

  # ============================= EUREKA =============================

  eureka-service:
    networks:
      - mynetwork
    restart: always
    container_name: "eureka-service"
    build:
      context: ./eureka
      dockerfile: Dockerfile
    working_dir: /eureka
    ports:
      - "8761:8761"
    volumes:
      - "./eureka:/eureka"


# ============================= USER SERVICE =============================

  user-service:
    networks:
      - mynetwork
    restart: always
    container_name: "user-service"
    build:
      context: ./user-service
      dockerfile: Dockerfile
    working_dir: /user-service
    ports:
      - "8083:8080"
    volumes:
      - "./user-service:/user-service"
    depends_on:
      - user-db
      - eureka-service
    environment:
      eureka.client.service-url.defaultZone: http://eureka-service:8761/eureka

  user-db:
    networks:
      - mynetwork
    container_name: "user-db"
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: mydatabase
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d


  # ============================= POST SERVICE =============================

  post-service:
    networks:
      - mynetwork
    restart: always
    container_name: "post-service"
    build:
      context: ./post-service
      dockerfile: Dockerfile
    working_dir: /post-service
    ports:
      - "8082:8080"
    volumes:
      - "./post-service:/post-service"
    depends_on:
      - post-db
      - eureka-service
    environment:
      eureka.client.service-url.defaultZone: http://eureka-service:8761/eureka

  post-db:
    networks:
      - mynetwork
    container_name: "post-db"
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: mydatabase
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d